//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DACServices.Repositories
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using DACServices.Entities;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_DACSEntities : DbContext
    {
        public DB_DACSEntities()
            : base("name=DB_DACSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbComercio> tbComercio { get; set; }
        public virtual DbSet<tbConfiguration> tbConfiguration { get; set; }
        public virtual DbSet<tbCuestionario> tbCuestionario { get; set; }
        public virtual DbSet<tbCuestionarioPregunta> tbCuestionarioPregunta { get; set; }
        public virtual DbSet<tbPaciente> tbPaciente { get; set; }
        public virtual DbSet<tbPayment> tbPayment { get; set; }
        public virtual DbSet<tbPaymentDetail> tbPaymentDetail { get; set; }
        public virtual DbSet<tbPaymentStatus> tbPaymentStatus { get; set; }
        public virtual DbSet<tbPregunta> tbPregunta { get; set; }
        public virtual DbSet<tbRequest> tbRequest { get; set; }
        public virtual DbSet<tbRequestPaymentVendor> tbRequestPaymentVendor { get; set; }
        public virtual DbSet<tbUsuario> tbUsuario { get; set; }
        public virtual DbSet<tbVendor> tbVendor { get; set; }
    
        public virtual ObjectResult<LoginByUsernamePassword_Result> LoginByUsernamePassword(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginByUsernamePassword_Result>("LoginByUsernamePassword", usernameParameter, passwordParameter);
        }
    }
}
